// This file was GENERATED by command:
//     pump.py gmock-c-generated-function-mockers.h.pump
// DO NOT EDIT BY HAND!!!

// Author: carlos.gadea@ficosa.com

// This file extends Google Mock to be able to generate C wrappers
// needed to be able to test c code with the Google Test and
// Google Mock framework.
// This file implements function mockers of various arities.

#ifndef GMOCK_INCLUDE_GMOCK_GMOCK_C_GENERATED_FUNCTION_MOCKERS_H_
#define GMOCK_INCLUDE_GMOCK_GMOCK_C_GENERATED_FUNCTION_MOCKERS_H_

#include <assert.h>
#include "gmock/gmock.h"
// INTERNAL IMPLEMENTATION - DON'T USE IN USER CODE!!!
#define CMOCK_METHOD0_(instance, tn, Method, ...) \
  extern "C" { \
    GMOCK_RESULT_(tn, __VA_ARGS__) Method(  ) { \
      assert((( instance != NULL ) && "UT error: You have to add a mock \
object of type "#instance" to your test class.")); \
      return instance->Method(); \
    } \
  }
// INTERNAL IMPLEMENTATION - DON'T USE IN USER CODE!!!
#define CMOCK_METHOD1_(instance, tn, Method, ...) \
  extern "C" { \
    GMOCK_RESULT_(tn, __VA_ARGS__) Method( GMOCK_ARG_(tn, 1, \
        __VA_ARGS__) gmock_a1 ) { \
      assert((( instance != NULL ) && "UT error: You have to add a mock \
object of type "#instance" to your test class.")); \
      return instance->Method(gmock_a1); \
    } \
  }
// INTERNAL IMPLEMENTATION - DON'T USE IN USER CODE!!!
#define CMOCK_METHOD2_(instance, tn, Method, ...) \
  extern "C" { \
    GMOCK_RESULT_(tn, __VA_ARGS__) Method( GMOCK_ARG_(tn, 1, \
        __VA_ARGS__) gmock_a1, \
      GMOCK_ARG_(tn, 2, __VA_ARGS__) gmock_a2 ) { \
      assert((( instance != NULL ) && "UT error: You have to add a mock \
object of type "#instance" to your test class.")); \
      return instance->Method(gmock_a1, gmock_a2); \
    } \
  }
// INTERNAL IMPLEMENTATION - DON'T USE IN USER CODE!!!
#define CMOCK_METHOD3_(instance, tn, Method, ...) \
  extern "C" { \
    GMOCK_RESULT_(tn, __VA_ARGS__) Method( GMOCK_ARG_(tn, 1, \
        __VA_ARGS__) gmock_a1, \
      GMOCK_ARG_(tn, 2, __VA_ARGS__) gmock_a2, \
      GMOCK_ARG_(tn, 3, __VA_ARGS__) gmock_a3 ) { \
      assert((( instance != NULL ) && "UT error: You have to add a mock \
object of type "#instance" to your test class.")); \
      return instance->Method(gmock_a1, gmock_a2, gmock_a3); \
    } \
  }
// INTERNAL IMPLEMENTATION - DON'T USE IN USER CODE!!!
#define CMOCK_METHOD4_(instance, tn, Method, ...) \
  extern "C" { \
    GMOCK_RESULT_(tn, __VA_ARGS__) Method( GMOCK_ARG_(tn, 1, \
        __VA_ARGS__) gmock_a1, \
      GMOCK_ARG_(tn, 2, __VA_ARGS__) gmock_a2, \
      GMOCK_ARG_(tn, 3, __VA_ARGS__) gmock_a3, \
      GMOCK_ARG_(tn, 4, __VA_ARGS__) gmock_a4 ) { \
      assert((( instance != NULL ) && "UT error: You have to add a mock \
object of type "#instance" to your test class.")); \
      return instance->Method(gmock_a1, gmock_a2, gmock_a3, gmock_a4); \
    } \
  }
// INTERNAL IMPLEMENTATION - DON'T USE IN USER CODE!!!
#define CMOCK_METHOD5_(instance, tn, Method, ...) \
  extern "C" { \
    GMOCK_RESULT_(tn, __VA_ARGS__) Method( GMOCK_ARG_(tn, 1, \
        __VA_ARGS__) gmock_a1, \
      GMOCK_ARG_(tn, 2, __VA_ARGS__) gmock_a2, \
      GMOCK_ARG_(tn, 3, __VA_ARGS__) gmock_a3, \
      GMOCK_ARG_(tn, 4, __VA_ARGS__) gmock_a4, \
      GMOCK_ARG_(tn, 5, __VA_ARGS__) gmock_a5 ) { \
      assert((( instance != NULL ) && "UT error: You have to add a mock \
object of type "#instance" to your test class.")); \
      return instance->Method(gmock_a1, gmock_a2, gmock_a3, gmock_a4, \
          gmock_a5); \
    } \
  }
// INTERNAL IMPLEMENTATION - DON'T USE IN USER CODE!!!
#define CMOCK_METHOD6_(instance, tn, Method, ...) \
  extern "C" { \
    GMOCK_RESULT_(tn, __VA_ARGS__) Method( GMOCK_ARG_(tn, 1, \
        __VA_ARGS__) gmock_a1, \
      GMOCK_ARG_(tn, 2, __VA_ARGS__) gmock_a2, \
      GMOCK_ARG_(tn, 3, __VA_ARGS__) gmock_a3, \
      GMOCK_ARG_(tn, 4, __VA_ARGS__) gmock_a4, \
      GMOCK_ARG_(tn, 5, __VA_ARGS__) gmock_a5, \
      GMOCK_ARG_(tn, 6, __VA_ARGS__) gmock_a6 ) { \
      assert((( instance != NULL ) && "UT error: You have to add a mock \
object of type "#instance" to your test class.")); \
      return instance->Method(gmock_a1, gmock_a2, gmock_a3, gmock_a4, \
          gmock_a5, gmock_a6); \
    } \
  }
// INTERNAL IMPLEMENTATION - DON'T USE IN USER CODE!!!
#define CMOCK_METHOD7_(instance, tn, Method, ...) \
  extern "C" { \
    GMOCK_RESULT_(tn, __VA_ARGS__) Method( GMOCK_ARG_(tn, 1, \
        __VA_ARGS__) gmock_a1, \
      GMOCK_ARG_(tn, 2, __VA_ARGS__) gmock_a2, \
      GMOCK_ARG_(tn, 3, __VA_ARGS__) gmock_a3, \
      GMOCK_ARG_(tn, 4, __VA_ARGS__) gmock_a4, \
      GMOCK_ARG_(tn, 5, __VA_ARGS__) gmock_a5, \
      GMOCK_ARG_(tn, 6, __VA_ARGS__) gmock_a6, \
      GMOCK_ARG_(tn, 7, __VA_ARGS__) gmock_a7 ) { \
      assert((( instance != NULL ) && "UT error: You have to add a mock \
object of type "#instance" to your test class.")); \
      return instance->Method(gmock_a1, gmock_a2, gmock_a3, gmock_a4, \
          gmock_a5, gmock_a6, gmock_a7); \
    } \
  }
// INTERNAL IMPLEMENTATION - DON'T USE IN USER CODE!!!
#define CMOCK_METHOD8_(instance, tn, Method, ...) \
  extern "C" { \
    GMOCK_RESULT_(tn, __VA_ARGS__) Method( GMOCK_ARG_(tn, 1, \
        __VA_ARGS__) gmock_a1, \
      GMOCK_ARG_(tn, 2, __VA_ARGS__) gmock_a2, \
      GMOCK_ARG_(tn, 3, __VA_ARGS__) gmock_a3, \
      GMOCK_ARG_(tn, 4, __VA_ARGS__) gmock_a4, \
      GMOCK_ARG_(tn, 5, __VA_ARGS__) gmock_a5, \
      GMOCK_ARG_(tn, 6, __VA_ARGS__) gmock_a6, \
      GMOCK_ARG_(tn, 7, __VA_ARGS__) gmock_a7, \
      GMOCK_ARG_(tn, 8, __VA_ARGS__) gmock_a8 ) { \
      assert((( instance != NULL ) && "UT error: You have to add a mock \
object of type "#instance" to your test class.")); \
      return instance->Method(gmock_a1, gmock_a2, gmock_a3, gmock_a4, \
          gmock_a5, gmock_a6, gmock_a7, gmock_a8); \
    } \
  }
// INTERNAL IMPLEMENTATION - DON'T USE IN USER CODE!!!
#define CMOCK_METHOD9_(instance, tn, Method, ...) \
  extern "C" { \
    GMOCK_RESULT_(tn, __VA_ARGS__) Method( GMOCK_ARG_(tn, 1, \
        __VA_ARGS__) gmock_a1, \
      GMOCK_ARG_(tn, 2, __VA_ARGS__) gmock_a2, \
      GMOCK_ARG_(tn, 3, __VA_ARGS__) gmock_a3, \
      GMOCK_ARG_(tn, 4, __VA_ARGS__) gmock_a4, \
      GMOCK_ARG_(tn, 5, __VA_ARGS__) gmock_a5, \
      GMOCK_ARG_(tn, 6, __VA_ARGS__) gmock_a6, \
      GMOCK_ARG_(tn, 7, __VA_ARGS__) gmock_a7, \
      GMOCK_ARG_(tn, 8, __VA_ARGS__) gmock_a8, \
      GMOCK_ARG_(tn, 9, __VA_ARGS__) gmock_a9 ) { \
      assert((( instance != NULL ) && "UT error: You have to add a mock \
object of type "#instance" to your test class.")); \
      return instance->Method(gmock_a1, gmock_a2, gmock_a3, gmock_a4, \
          gmock_a5, gmock_a6, gmock_a7, gmock_a8, gmock_a9); \
    } \
  }
// INTERNAL IMPLEMENTATION - DON'T USE IN USER CODE!!!
#define CMOCK_METHOD10_(instance, tn, Method, ...) \
  extern "C" { \
    GMOCK_RESULT_(tn, __VA_ARGS__) Method( GMOCK_ARG_(tn, 1, \
        __VA_ARGS__) gmock_a1, \
      GMOCK_ARG_(tn, 2, __VA_ARGS__) gmock_a2, \
      GMOCK_ARG_(tn, 3, __VA_ARGS__) gmock_a3, \
      GMOCK_ARG_(tn, 4, __VA_ARGS__) gmock_a4, \
      GMOCK_ARG_(tn, 5, __VA_ARGS__) gmock_a5, \
      GMOCK_ARG_(tn, 6, __VA_ARGS__) gmock_a6, \
      GMOCK_ARG_(tn, 7, __VA_ARGS__) gmock_a7, \
      GMOCK_ARG_(tn, 8, __VA_ARGS__) gmock_a8, \
      GMOCK_ARG_(tn, 9, __VA_ARGS__) gmock_a9, \
      GMOCK_ARG_(tn, 10, __VA_ARGS__) gmock_a10 ) { \
      assert((( instance != NULL ) && "UT error: You have to add a mock \
object of type "#instance" to your test class.")); \
      return instance->Method(gmock_a1, gmock_a2, gmock_a3, gmock_a4, \
          gmock_a5, gmock_a6, gmock_a7, gmock_a8, gmock_a9, gmock_a10); \
    } \
  }
// INTERNAL IMPLEMENTATION - DON'T USE IN USER CODE!!!
#define CMOCK_METHOD11_(instance, tn, Method, ...) \
  extern "C" { \
    GMOCK_RESULT_(tn, __VA_ARGS__) Method( GMOCK_ARG_(tn, 1, \
        __VA_ARGS__) gmock_a1, \
      GMOCK_ARG_(tn, 2, __VA_ARGS__) gmock_a2, \
      GMOCK_ARG_(tn, 3, __VA_ARGS__) gmock_a3, \
      GMOCK_ARG_(tn, 4, __VA_ARGS__) gmock_a4, \
      GMOCK_ARG_(tn, 5, __VA_ARGS__) gmock_a5, \
      GMOCK_ARG_(tn, 6, __VA_ARGS__) gmock_a6, \
      GMOCK_ARG_(tn, 7, __VA_ARGS__) gmock_a7, \
      GMOCK_ARG_(tn, 8, __VA_ARGS__) gmock_a8, \
      GMOCK_ARG_(tn, 9, __VA_ARGS__) gmock_a9, \
      GMOCK_ARG_(tn, 10, __VA_ARGS__) gmock_a10, \
      GMOCK_ARG_(tn, 11, __VA_ARGS__) gmock_a11 ) { \
      assert((( instance != NULL ) && "UT error: You have to add a mock \
object of type "#instance" to your test class.")); \
      return instance->Method(gmock_a1, gmock_a2, gmock_a3, gmock_a4, \
          gmock_a5, gmock_a6, gmock_a7, gmock_a8, gmock_a9, gmock_a10, \
          gmock_a11); \
    } \
  }
// INTERNAL IMPLEMENTATION - DON'T USE IN USER CODE!!!
#define CMOCK_METHOD12_(instance, tn, Method, ...) \
  extern "C" { \
    GMOCK_RESULT_(tn, __VA_ARGS__) Method( GMOCK_ARG_(tn, 1, \
        __VA_ARGS__) gmock_a1, \
      GMOCK_ARG_(tn, 2, __VA_ARGS__) gmock_a2, \
      GMOCK_ARG_(tn, 3, __VA_ARGS__) gmock_a3, \
      GMOCK_ARG_(tn, 4, __VA_ARGS__) gmock_a4, \
      GMOCK_ARG_(tn, 5, __VA_ARGS__) gmock_a5, \
      GMOCK_ARG_(tn, 6, __VA_ARGS__) gmock_a6, \
      GMOCK_ARG_(tn, 7, __VA_ARGS__) gmock_a7, \
      GMOCK_ARG_(tn, 8, __VA_ARGS__) gmock_a8, \
      GMOCK_ARG_(tn, 9, __VA_ARGS__) gmock_a9, \
      GMOCK_ARG_(tn, 10, __VA_ARGS__) gmock_a10, \
      GMOCK_ARG_(tn, 11, __VA_ARGS__) gmock_a11, \
      GMOCK_ARG_(tn, 12, __VA_ARGS__) gmock_a12 ) { \
      assert((( instance != NULL ) && "UT error: You have to add a mock \
object of type "#instance" to your test class.")); \
      return instance->Method(gmock_a1, gmock_a2, gmock_a3, gmock_a4, \
          gmock_a5, gmock_a6, gmock_a7, gmock_a8, gmock_a9, gmock_a10, \
          gmock_a11, gmock_a12); \
    } \
  }
// INTERNAL IMPLEMENTATION - DON'T USE IN USER CODE!!!
#define CMOCK_METHOD13_(instance, tn, Method, ...) \
  extern "C" { \
    GMOCK_RESULT_(tn, __VA_ARGS__) Method( GMOCK_ARG_(tn, 1, \
        __VA_ARGS__) gmock_a1, \
      GMOCK_ARG_(tn, 2, __VA_ARGS__) gmock_a2, \
      GMOCK_ARG_(tn, 3, __VA_ARGS__) gmock_a3, \
      GMOCK_ARG_(tn, 4, __VA_ARGS__) gmock_a4, \
      GMOCK_ARG_(tn, 5, __VA_ARGS__) gmock_a5, \
      GMOCK_ARG_(tn, 6, __VA_ARGS__) gmock_a6, \
      GMOCK_ARG_(tn, 7, __VA_ARGS__) gmock_a7, \
      GMOCK_ARG_(tn, 8, __VA_ARGS__) gmock_a8, \
      GMOCK_ARG_(tn, 9, __VA_ARGS__) gmock_a9, \
      GMOCK_ARG_(tn, 10, __VA_ARGS__) gmock_a10, \
      GMOCK_ARG_(tn, 11, __VA_ARGS__) gmock_a11, \
      GMOCK_ARG_(tn, 12, __VA_ARGS__) gmock_a12, \
      GMOCK_ARG_(tn, 13, __VA_ARGS__) gmock_a13 ) { \
      assert((( instance != NULL ) && "UT error: You have to add a mock \
object of type "#instance" to your test class.")); \
      return instance->Method(gmock_a1, gmock_a2, gmock_a3, gmock_a4, \
          gmock_a5, gmock_a6, gmock_a7, gmock_a8, gmock_a9, gmock_a10, \
          gmock_a11, gmock_a12, gmock_a13); \
    } \
  }
// INTERNAL IMPLEMENTATION - DON'T USE IN USER CODE!!!
#define CMOCK_METHOD14_(instance, tn, Method, ...) \
  extern "C" { \
    GMOCK_RESULT_(tn, __VA_ARGS__) Method( GMOCK_ARG_(tn, 1, \
        __VA_ARGS__) gmock_a1, \
      GMOCK_ARG_(tn, 2, __VA_ARGS__) gmock_a2, \
      GMOCK_ARG_(tn, 3, __VA_ARGS__) gmock_a3, \
      GMOCK_ARG_(tn, 4, __VA_ARGS__) gmock_a4, \
      GMOCK_ARG_(tn, 5, __VA_ARGS__) gmock_a5, \
      GMOCK_ARG_(tn, 6, __VA_ARGS__) gmock_a6, \
      GMOCK_ARG_(tn, 7, __VA_ARGS__) gmock_a7, \
      GMOCK_ARG_(tn, 8, __VA_ARGS__) gmock_a8, \
      GMOCK_ARG_(tn, 9, __VA_ARGS__) gmock_a9, \
      GMOCK_ARG_(tn, 10, __VA_ARGS__) gmock_a10, \
      GMOCK_ARG_(tn, 11, __VA_ARGS__) gmock_a11, \
      GMOCK_ARG_(tn, 12, __VA_ARGS__) gmock_a12, \
      GMOCK_ARG_(tn, 13, __VA_ARGS__) gmock_a13, \
      GMOCK_ARG_(tn, 14, __VA_ARGS__) gmock_a14 ) { \
      assert((( instance != NULL ) && "UT error: You have to add a mock \
object of type "#instance" to your test class.")); \
      return instance->Method(gmock_a1, gmock_a2, gmock_a3, gmock_a4, \
          gmock_a5, gmock_a6, gmock_a7, gmock_a8, gmock_a9, gmock_a10, \
          gmock_a11, gmock_a12, gmock_a13, gmock_a14); \
    } \
  }
// INTERNAL IMPLEMENTATION - DON'T USE IN USER CODE!!!
#define CMOCK_METHOD15_(instance, tn, Method, ...) \
  extern "C" { \
    GMOCK_RESULT_(tn, __VA_ARGS__) Method( GMOCK_ARG_(tn, 1, \
        __VA_ARGS__) gmock_a1, \
      GMOCK_ARG_(tn, 2, __VA_ARGS__) gmock_a2, \
      GMOCK_ARG_(tn, 3, __VA_ARGS__) gmock_a3, \
      GMOCK_ARG_(tn, 4, __VA_ARGS__) gmock_a4, \
      GMOCK_ARG_(tn, 5, __VA_ARGS__) gmock_a5, \
      GMOCK_ARG_(tn, 6, __VA_ARGS__) gmock_a6, \
      GMOCK_ARG_(tn, 7, __VA_ARGS__) gmock_a7, \
      GMOCK_ARG_(tn, 8, __VA_ARGS__) gmock_a8, \
      GMOCK_ARG_(tn, 9, __VA_ARGS__) gmock_a9, \
      GMOCK_ARG_(tn, 10, __VA_ARGS__) gmock_a10, \
      GMOCK_ARG_(tn, 11, __VA_ARGS__) gmock_a11, \
      GMOCK_ARG_(tn, 12, __VA_ARGS__) gmock_a12, \
      GMOCK_ARG_(tn, 13, __VA_ARGS__) gmock_a13, \
      GMOCK_ARG_(tn, 14, __VA_ARGS__) gmock_a14, \
      GMOCK_ARG_(tn, 15, __VA_ARGS__) gmock_a15 ) { \
      assert((( instance != NULL ) && "UT error: You have to add a mock \
object of type "#instance" to your test class.")); \
      return instance->Method(gmock_a1, gmock_a2, gmock_a3, gmock_a4, \
          gmock_a5, gmock_a6, gmock_a7, gmock_a8, gmock_a9, gmock_a10, \
          gmock_a11, gmock_a12, gmock_a13, gmock_a14, gmock_a15); \
    } \
  }
#define CMOCK_METHOD0(instance, Method, ...) CMOCK_METHOD0_(instance, , \
    Method, __VA_ARGS__)
#define CMOCK_METHOD1(instance, Method, ...) CMOCK_METHOD1_(instance, , \
    Method, __VA_ARGS__)
#define CMOCK_METHOD2(instance, Method, ...) CMOCK_METHOD2_(instance, , \
    Method, __VA_ARGS__)
#define CMOCK_METHOD3(instance, Method, ...) CMOCK_METHOD3_(instance, , \
    Method, __VA_ARGS__)
#define CMOCK_METHOD4(instance, Method, ...) CMOCK_METHOD4_(instance, , \
    Method, __VA_ARGS__)
#define CMOCK_METHOD5(instance, Method, ...) CMOCK_METHOD5_(instance, , \
    Method, __VA_ARGS__)
#define CMOCK_METHOD6(instance, Method, ...) CMOCK_METHOD6_(instance, , \
    Method, __VA_ARGS__)
#define CMOCK_METHOD7(instance, Method, ...) CMOCK_METHOD7_(instance, , \
    Method, __VA_ARGS__)
#define CMOCK_METHOD8(instance, Method, ...) CMOCK_METHOD8_(instance, , \
    Method, __VA_ARGS__)
#define CMOCK_METHOD9(instance, Method, ...) CMOCK_METHOD9_(instance, , \
    Method, __VA_ARGS__)
#define CMOCK_METHOD10(instance, Method, ...) CMOCK_METHOD10_(instance, , \
    Method, __VA_ARGS__)
#define CMOCK_METHOD11(instance, Method, ...) CMOCK_METHOD11_(instance, , \
    Method, __VA_ARGS__)
#define CMOCK_METHOD12(instance, Method, ...) CMOCK_METHOD12_(instance, , \
    Method, __VA_ARGS__)
#define CMOCK_METHOD13(instance, Method, ...) CMOCK_METHOD13_(instance, , \
    Method, __VA_ARGS__)
#define CMOCK_METHOD14(instance, Method, ...) CMOCK_METHOD14_(instance, , \
    Method, __VA_ARGS__)
#define CMOCK_METHOD15(instance, Method, ...) CMOCK_METHOD15_(instance, , \
    Method, __VA_ARGS__)

#endif  // GMOCK_INCLUDE_GMOCK_GMOCK_C_GENERATED_FUNCTION_MOCKERS_H_

